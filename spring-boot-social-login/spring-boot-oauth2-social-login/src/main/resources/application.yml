server:
  port: 8085

spring:
  application.name: spring oauth2 social login
  datasource:
    url: jdbc:postgresql://localhost:5432/sysperson
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
#      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 800107701071-9buqp88pmr3fffnrg1g1vr41d7lc3vcf.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 384802727439008
            clientSecret: 5c66ede9c4be3fd5790d295ed2b5c246
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: 06cf16fc2669c691a0fd
            clientSecret: 6a4615565278ea9ec7c62cd996e1a14af8719060
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,picture.width(250).height(250)

app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:4200,http://localhost:8085
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:4200/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect